(mod (
    (BILL MOD_HASH INNER_PUZZLE_HASH CAT_MOD_HASH CRT_TAIL_HASH STATUTES_STRUCT
     LAUNCH_TIMESTAMP LAST_OUTLIER_VOTE_SEQUENCE statutes_puzzle_hash)
    (
      amount  ; already asserted in governance.clsp
      current_timestamp
      outlier_vote_warmup_interval
      accept_outlier
      announcers_ban_mask
      current_oracle_outlier_vote_sequence
      oracle_launcher_id
      oracle_inner_puzzle_hash
      relative_time_spent
    )
  )

  (include *standard-cl-23.1*)
  (include curry.clib)
  (include condition_codes.clib)
  (include statutes_utils.clib)
  (include utils.clib)
  (assign
    oracle_puzzle_hash (curry_hashes (f STATUTES_STRUCT)
        ; reuse statutes struct to generate singleton struct for oracle
        (sha256tree (c (f STATUTES_STRUCT) (c oracle_launcher_id (r (r STATUTES_STRUCT)))))
        oracle_inner_puzzle_hash
    )
    (
      (veto_seconds . enact_seconds)
      statute_index
      statute_value
      threshold_amount_to_propose
      new_veto_seconds
      delay_seconds
      max_delta
    ) (if BILL BILL (list (c 0 0) () () () () () ()))
    (assert_debug
      ; we require a warmup period so that attackers can't suddenly deploy a lot of coins
      (> current_timestamp (+ LAUNCH_TIMESTAMP outlier_vote_warmup_interval))
      ; can't vote on the same outlier twice
      (> current_oracle_outlier_vote_sequence LAST_OUTLIER_VOTE_SEQUENCE)
      (list ; result of the program
        (if BILL ; bill part
          (list
            ; we allow votes that are in proposal mode to vote for a price, we just need
            ; to update the enact seconds to whatever is passed with relative_time_spent
            ; it's up to the spender to make this time as close to current time as possible
            (c
              (if (> relative_time_spent veto_seconds)
                1
                (- veto_seconds relative_time_spent)
              )
              (if (> relative_time_spent enact_seconds)
                1
                (- enact_seconds relative_time_spent)
              )
            )
            statute_index
            statute_value
            threshold_amount_to_propose
            new_veto_seconds
            delay_seconds
            max_delta
          )
          ()
        )
        (list ; conditions
          (list ASSERT_MY_PUZZLE_HASH
            (curry_hashes CAT_MOD_HASH
              (sha256 ONE CAT_MOD_HASH)
              (sha256 ONE CRT_TAIL_HASH)
              (curry_hashes MOD_HASH
                (sha256 ONE MOD_HASH)
                (sha256 ONE CAT_MOD_HASH)
                (sha256 ONE CRT_TAIL_HASH)
                (sha256tree STATUTES_STRUCT)
                (sha256 ONE LAUNCH_TIMESTAMP)
                (sha256 ONE LAST_OUTLIER_VOTE_SEQUENCE)
                (sha256 ONE INNER_PUZZLE_HASH)
                (sha256tree BILL)
              )
            )
          )
          ; this timestamp must be in the past, so it's up to the sender to push it as close to present as possible
          (list ASSERT_SECONDS_RELATIVE relative_time_spent)

          (list ASSERT_BEFORE_SECONDS_ABSOLUTE (+ current_timestamp MAX_TX_BLOCK_TIME))
          ; current_timestamp - 1 min should've passed already too, this is to ensure current timestamp is
          ; within a boundary of last_block > current_timestamp - 1 block < next block
          (list ASSERT_SECONDS_ABSOLUTE (- current_timestamp MAX_TX_BLOCK_TIME))
          ; send message to oracle to confirm our vote
          (list RECEIVE_MESSAGE 0x17
            (concat PROTOCOL_PREFIX
              (sha256tree
                (list
                  (if accept_outlier  ; amount direction, negative if rejection
                    amount
                    (* amount -1)
                  )
                  current_timestamp
                  announcers_ban_mask
                  current_oracle_outlier_vote_sequence
                )
              )
            )
            oracle_puzzle_hash
          )
          (assert-statute statutes_puzzle_hash STATUTE_ORACLE_OUTLIER_VOTE_WARMUP_INTERVAL outlier_vote_warmup_interval)
          (assert-statute statutes_puzzle_hash STATUTE_ORACLE_LAUNCHER_ID oracle_launcher_id)
        )
        current_oracle_outlier_vote_sequence ; set to the current oracle vote sequence
      )
    )
  )
)